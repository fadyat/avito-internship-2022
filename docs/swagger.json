{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for a balance API.",
        "title": "Avito Internship 2022 Balance API",
        "contact": {
            "name": "Artyom Fadeyev",
            "url": "https://github.com/fadyat"
        },
        "version": "1.0.0"
    },
    "host": "localhost:80",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/health": {
            "get": {
                "description": "Healthcheck endpoint, that checks if the service is alive and database connection is working.",
                "tags": [
                    "health"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.HealthSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    }
                }
            }
        },
        "/api/v1/service": {
            "get": {
                "description": "Get all outer services info in the system",
                "tags": [
                    "OuterService"
                ],
                "summary": "Get all services",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Services"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new outer service info in the system",
                "tags": [
                    "OuterService"
                ],
                "summary": "New service",
                "parameters": [
                    {
                        "description": "Outer service short info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OuterService"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.ServiceCreated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    }
                }
            }
        },
        "/api/v1/service/{id}": {
            "get": {
                "description": "Get outer service info in the system by id",
                "tags": [
                    "OuterService"
                ],
                "summary": "Get service by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "service_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OuterService"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.OuterService": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "@description: Name is a name of the service.\n@example:     aboba-service",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "url": {
                    "description": "@description: URL is a link to the implementation of the service.\n@example:     http://aboba-service.com",
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.OuterService": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "@description: ID is given unique identifier of the service.\n@example:     1",
                    "type": "integer"
                },
                "name": {
                    "description": "@description: Name is a name of the service.\n@example:     aboba-service",
                    "type": "string"
                },
                "url": {
                    "description": "@description: URL is a link to the implementation of the service.\n@example:     http://aboba-service.com",
                    "type": "string"
                }
            }
        },
        "responses.ErrorResp": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "@description: Description is a description of the error.\n@example:     invalid request with id=1",
                    "type": "string"
                },
                "message": {
                    "description": "@description: Message is a message of the error.\n@example:     invalid request",
                    "type": "string"
                }
            }
        },
        "responses.HealthSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "@description: Message is a success message.\n@example:     OK",
                    "type": "string"
                }
            }
        },
        "responses.ServiceCreated": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "@description: ID is given unique identifier of the service.\n@example:     1",
                    "type": "string"
                }
            }
        },
        "responses.Services": {
            "type": "object",
            "properties": {
                "services": {
                    "description": "@description: Services is a list of services.\n@example:     [{\"id\":1,\"name\":\"aboba-service\",\"url\":\"http://aboba-service.com\"}]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OuterService"
                    }
                }
            }
        }
    }
}