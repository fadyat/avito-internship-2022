basePath: /api/v1
definitions:
  dto.OuterService:
    properties:
      name:
        description: |-
          @description: Name is a name of the service.
          @example:     aboba-service
        maxLength: 255
        minLength: 1
        type: string
      url:
        description: |-
          @description: URL is a link to the implementation of the service.
          @example:     http://aboba-service.com
        maxLength: 255
        type: string
    required:
    - name
    type: object
  models.OuterService:
    properties:
      id:
        description: |-
          @description: ID is given unique identifier of the service.
          @example:     1
        type: integer
      name:
        description: |-
          @description: Name is a name of the service.
          @example:     aboba-service
        type: string
      url:
        description: |-
          @description: URL is a link to the implementation of the service.
          @example:     http://aboba-service.com
        type: string
    type: object
  responses.ErrorResp:
    properties:
      description:
        description: |-
          @description: Description is a description of the error.
          @example:     invalid request with id=1
        type: string
      message:
        description: |-
          @description: Message is a message of the error.
          @example:     invalid request
        type: string
    type: object
  responses.HealthSuccess:
    properties:
      message:
        description: |-
          @description: Message is a success message.
          @example:     OK
        type: string
    type: object
  responses.ServiceCreated:
    properties:
      id:
        description: |-
          @description: ID is given unique identifier of the service.
          @example:     1
        type: string
    type: object
  responses.Services:
    properties:
      services:
        description: |-
          @description: Services is a list of services.
          @example:     [{"id":1,"name":"aboba-service","url":"http://aboba-service.com"}]
        items:
          $ref: '#/definitions/models.OuterService'
        type: array
    type: object
host: localhost:80
info:
  contact:
    name: Artyom Fadeyev
    url: https://github.com/fadyat
  description: This is a sample server for a balance API.
  title: Avito Internship 2022 Balance API
  version: 1.0.0
paths:
  /api/v1/health:
    get:
      description: Healthcheck endpoint, that checks if the service is alive and database
        connection is working.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.HealthSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResp'
      summary: Healthcheck
      tags:
      - health
  /api/v1/service:
    get:
      description: Get all outer services info in the system
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Services'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResp'
      summary: Get all services
      tags:
      - OuterService
    post:
      description: Create new outer service info in the system
      parameters:
      - description: Outer service short info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.OuterService'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ServiceCreated'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResp'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/responses.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResp'
      summary: New service
      tags:
      - OuterService
  /api/v1/service/{id}:
    get:
      description: Get outer service info in the system by id
      parameters:
      - description: service_id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OuterService'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResp'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/responses.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResp'
      summary: Get service by id
      tags:
      - OuterService
schemes:
- http
swagger: "2.0"
